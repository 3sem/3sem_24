Задание:
1. Основное: разработать приложение с архитектурой клиент/сервер, распределенно вычисляющее интеграл методом Монте-Карло, которое запускается на нескольких компьютерах, причём среди запущенных программ есть:
1) Клиент, который отправляет задание посчитать часть задачи, а затем собирает результаты
2) Серверы, которые принимают от клиента задание в формате, специфицируемом разработчиком (число точек, интервал и т.д) через TCP-соединение, считают и отправляют результат обратно клиенту.
Список адресов компьютеров, готовых взяться за задачу, заранее неизвестен клиенту, и определяется динамически как подмножество из множества заранее известных серверов:
- Клиент рассылает UDP-широковещательное сообщение (BROADCAST) компьютерам в своей подсети. См. пример: 
http://beej.us/guide/bgnet/html/single/bgnet.html#broadcast
- На серверах, готовых вычислить часть задачи, запущен UDP-сервер, отвечающий клиенту на некотором заранее известном порте.
Ответы записываются в специальный "список адресов", по которым потом следует установить TCP-соединение и дать задание на расчёт.


*(Плюс балл). Балансировка нагрузки на серверах (статическая и без миграций): определяется число ядер на серверах, после чего
клиент рассылает задания пропорционально этому числу.
Например, в сети есть 2 вычислителя, 4 и 8 ядрами соответственно. Тогда исходная задача будет разделена в соотношении 1:2, и первая часть будет отдана 
компьютеру №1, а вторая, вдвое большая - компьютеру №2.


Ожидаемое поведение Вашего массово-параллельного решателя вне зависимости от условий выше - линейное ускорение от масштабирования по сети.
В решении рекомендуется максимально переиспользовать код из examples.
